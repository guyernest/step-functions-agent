version: 1
applications:
  - appRoot: ui_amplify
    backend:
      phases:
        preBuild:
          commands:
            # Use Node.js 20 for better compatibility
            - nvm use 20
            - node --version
            # Install dependencies
            - npm ci --cache .npm --prefer-offline
            # Install Rust toolchain
            - |
              if ! command -v rustc &> /dev/null; then
                echo "Installing Rust..."
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
              fi
            - export PATH="$HOME/.cargo/bin:$PATH"
            # Install cargo-lambda
            - |
              if ! command -v cargo-lambda &> /dev/null; then
                echo "Installing cargo-lambda..."
                pip3 install cargo-lambda
              fi
        build:
          commands:
            # Ensure Rust is in PATH
            - export PATH="$HOME/.cargo/bin:$PATH"
            # Build MCP server Rust Lambda function
            - make build-mcp
            # Install missing dependencies for Amplify CLI if needed
            - npm install --no-save @parcel/watcher
            # Deploy backend resources
            - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
        postBuild:
          commands:
            # Install script dependencies and register MCP server
            - echo "Installing MCP registration script dependencies..."
            - cd scripts && npm install --production && cd ..
            - echo "Registering MCP server in registry..."
            - cd scripts && npm run register-mcp && cd ..
            - echo "âœ… MCP server registration completed"
    frontend:
      phases:
        preBuild:
          commands:
            # Use Node.js 20 for better compatibility
            - nvm use 20
            - node --version
            - npm ci --cache .npm --prefer-offline
            # Install platform-specific optional dependencies
            - npm install --no-save @rollup/rollup-linux-x64-gnu
        build:
          commands:
            # Extract MCP endpoint from amplify_outputs.json if available
            - |
              if [ -f "amplify_outputs.json" ]; then
                # Use grep and sed instead of jq which may not be available
                export VITE_MCP_ENDPOINT=$(grep -o '"mcpServerEndpoint"[[:space:]]*:[[:space:]]*"[^"]*"' amplify_outputs.json | sed 's/.*"mcpServerEndpoint"[[:space:]]*:[[:space:]]*"\([^"]*\)".*/\1/')
                echo "Found MCP endpoint: $VITE_MCP_ENDPOINT"
              fi
            # Build frontend
            - npm run build
      artifacts:
        baseDirectory: dist
        files:
          - '**/*'
      cache:
        paths:
          - .npm/**/*
          - node_modules/**/*
          # Cache Rust build artifacts
          - amplify/mcp-server/rust-mcp-server/.build/**/*
          - ~/.cargo/bin/cargo-lambda