version: 0.2

# Template for building a Java Lambda function
# Replace LAMBDA_DIR with the actual directory path, e.g., lambda/tools/stock-analyzer

phases:
  install:
    runtime-versions:
      java: corretto17
      python: 3.9
    commands:
      # Update system packages
      - yum update -y
      
      # Install AWS SAM CLI
      - pip install aws-sam-cli
      
      # Navigate to the Lambda directory
      - cd LAMBDA_DIR
      
  build:
    commands:
      # Navigate to the Lambda directory
      - cd LAMBDA_DIR
      
      # Build Java Lambda function using Maven
      - mvn clean package
      
      # Package with SAM (if there's a template.yaml)
      - |
        if [ -f template.yaml ]; then
          sam package --output-template-file packaged.yaml --s3-bucket ${S3_BUCKET}
        fi
      
  post_build:
    commands:
      # Get AWS account ID and region for S3 bucket name
      - |
        AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        AWS_REGION=$AWS_DEFAULT_REGION
        echo "Using AWS Region: $AWS_REGION"
        S3_BUCKET="step-functions-agent-artifacts-${AWS_REGION}-${AWS_ACCOUNT_ID}"
        echo "Using S3 bucket: $S3_BUCKET"
        export AWS_ACCOUNT_ID AWS_REGION S3_BUCKET
      
      # Check if bucket exists or create it
      - |
        echo "Checking if bucket $S3_BUCKET exists..."
        # Try to access the bucket and ignore errors
        if aws s3 ls "s3://$S3_BUCKET" >/dev/null 2>&1; then
          echo "Bucket $S3_BUCKET already exists."
        else
          echo "Creating bucket $S3_BUCKET..."
          # Ignore errors from bucket creation
          aws s3 mb "s3://$S3_BUCKET" || echo "Bucket may already exist, continuing..."
        fi
        
        # Make sure the lambda directory exists
        aws s3api put-object --bucket $S3_BUCKET --key lambda/LAMBDA_NAME/ --content-length 0 || true
      
      # Upload the Lambda code to S3
      - |
        cd LAMBDA_DIR
        echo "Uploading Lambda code..."
        
        # Upload packaged template if available
        if [ -f packaged.yaml ]; then
          aws s3 cp packaged.yaml s3://${S3_BUCKET}/lambda/LAMBDA_NAME/packaged.yaml
        fi
        
        # Find and upload the JAR file
        if [ -d target ]; then
          # Find the JAR file (typically in target directory)
          JAR_FILE=$(find target -name "*.jar" -not -name "*-sources.jar" -not -name "*-javadoc.jar" | head -1)
          if [ -n "$JAR_FILE" ]; then
            aws s3 cp "$JAR_FILE" s3://${S3_BUCKET}/lambda/LAMBDA_NAME/lambda.jar
          else
            echo "No JAR file found in target directory"
            exit 1
          fi
        else 
          echo "Target directory not found, build may have failed"
          exit 1
        fi
      
      # Output the S3 URLs
      - |
        echo "Build complete!"
        echo "Lambda artifacts available at s3://$S3_BUCKET/lambda/LAMBDA_NAME/"

artifacts:
  files:
    - LAMBDA_DIR/target/*.jar
    - LAMBDA_DIR/packaged.yaml
  discard-paths: no
  base-directory: '.'

cache:
  paths:
    - '/root/.m2/**/*'